services:
  - type: web
    name: notes-app
    env: node
    region: oregon  # Choose the region closest to your users
    buildCommand: |
      # Install root dependencies
      npm install
      
      # Install frontend dependencies
      cd Notes_App/frontend
      npm install --legacy-peer-deps
      
      # Install backend dependencies
      cd ../backend
      npm install --legacy-peer-deps
      
      # Build frontend
      cd ../frontend
      npm run build
      
      # Create public directory and copy frontend build
      cd ..
      mkdir -p backend/public
      cp -r frontend/dist/* backend/public/
    
    startCommand: cd Notes_App/backend && node src/server.js
    
    # Health check configuration
    healthCheckPath: /api/notes
    
    # Auto-deploy settings
    autoDeploy: true
    
    # Environment variables
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: MONGODB_URI
        fromDatabase:
          name: notes-app-db
          property: connectionString
    
    # Instance type (free tier)
    plan: free
    
    # Add build caching for faster deployments
    buildCache:
      enabled: true
    
    # Add environment secrets (set these in Render dashboard)
    # - key: JWT_SECRET
    #   generateValue: true
    # - key: JWT_EXPIRE
    #   value: 30d

databases:
  - name: notes-app-db
    databaseName: notes
    user: notes_user
    plan: free  # Free tier for MongoDB
    region: oregon  # Match the region with your web service
